[{"name":"Getting Started","path":"/getting-started/index.html","text":"# Getting started  ## Installation  ### From source  To install from source you can clone this repo and run `make install`. This will only work on Linux, maybe MacOS.  !!! question \"Want to help?\"      If you have knowledge of programming for Windows in C your pull requests would be greatly appreciated. See [Contributing](/getting-started/contributing.md) for more information. "},{"name":"Setup","path":"/setup/index.html","text":"# Setup  We think `Docodile` looks great by default, and hopefully you think so too. A core design priniciple of `Docodile` is minimal config, preferring excellent defaults over complex config files and plugins. But there are obviously times where you will want to customise to fit your needs.  The most effective way to make your site your own is to change the colors and font. Consult the [appearance](./appearance.md) section to preview the different style options.  !!! question \"Found an awesome look?\"      Post your config to the GitHub and it might be featured in our example screenshots!  ## Advanced customisation  When you initialise a `Docodile` project you'll notice that all CSS files and HTML templates are available to you right there in your repo.  ## What next?  Once your site is set up and looking great it's time to start creating content. Consult the [Reference](/reference/index.md) section to learn more. "},{"name":"Appearance","path":"/setup/appearance.html","text":"# Appearance  In `docodile.config` you have a few ways to quickly change the appearance of your docs site.  ```ini [theme] font-family=IBM Plex Sans color-scheme=light primary-color=emerald decorations=glass layout=compact ```  ## Color schemes  `docodile` currently offers two main color schemes, `dark` and `light`.  <script>     const bodyEl = document.querySelector(\"body\");     let config = {         'color-scheme': bodyEl.getAttribute('data-gd-color-scheme'),         'primary-color': bodyEl.getAttribute('data-gd-primary-color'),         'secondary-color': bodyEl.getAttribute('data-gd-secondary-color'),         'decorations': bodyEl.getAttribute('data-gd-decorations')     };     function updateConfig() {         const el = document.querySelector(\"#config-output\");         const text = Object.entries(config).reduce((prev, curr) => prev + `${curr[0]}=${curr[1]}\\n`, \"\");         el.innerText = text;     } </script>  <div style=\"display: flex; gap: 10px; flex-wrap: wrap; margin-top: 1rem;\">     <button class=\"scheme-button\" data-gd-color-scheme=\"dark\" onclick=\"changeScheme('dark')\">dark</button>     <button class=\"scheme-button\" data-gd-color-scheme=\"light\" onclick=\"changeScheme('light')\">light</button>     <style>.scheme-button { border: none; color: var(--gd-fg-primary); font-weight: bold; padding: 0.25rem 1rem; background: var(--gd-bg-primary); border-radius: 999px; font-size: 0.875rem; }</style>     <script>         function changeScheme(color) {             config['color-scheme'] = color;             updateConfig();             document.querySelector('body').setAttribute('data-gd-color-scheme', color);         }     </script> </div>  ## Layout options  <div style=\"display: flex; gap: 10px; flex-wrap: wrap; margin-top: 1rem;\">     <button class=\"layout-button\" onclick=\"toggleLayout('compact')\">compact</button>     <style>         .layout-button {             border: none;             color: var(--gd-header-fg-color);             font-weight: bold;             padding: 0.25rem 1rem;             background: var(--gd-header-bg-color);             border-radius: 999px;             font-size: 0.875rem;         }     </style>     <script>         function toggleLayout(layoutOption) {             const body = document.querySelector(\"body\");             let layout = body.getAttribute(\"data-gd-layout\");             layout = layout.includes(layoutOption)                 ? layout.replace(layoutOption, \"\")                 : layout.concat(\" \" + layoutOption);             config.layout = layout.trim();             updateConfig();             body.setAttribute(\"data-gd-layout\", layout.trim());         }     </script> </div>  ## Decorations  Decorations are toggles that can change the appearance of your site in interesting ways. Decorations can usually be combined but sometimes a decoration might override another.  <div style=\"display: flex; gap: 10px; flex-wrap: wrap; margin-top: 1rem;\">     <button class=\"decoration-button\" onclick=\"toggleDecoration('glass')\">glass</button>     <button class=\"decoration-button\" onclick=\"toggleDecoration('blend')\">blend</button>     <button class=\"decoration-button\" data-gd-decorations=\"pride\" onclick=\"toggleDecoration('pride')\">pride</button>     <style>         .decoration-button {             border: none;             color: var(--gd-header-fg-color);             font-weight: bold;             padding: 0.25rem 1rem;             background: var(--gd-header-bg-color);             border-radius: 999px;             font-size: 0.875rem;         }     </style>     <script>         function toggleDecoration(decoration) {             const body = document.querySelector(\"body\");             let decorations = body.getAttribute(\"data-gd-decorations\");             decorations = decorations.includes(decoration)                 ? decorations.replace(decoration, \"\")                 : decorations.concat(\" \" + decoration);             config.decorations = decorations.trim();             updateConfig();             body.setAttribute(\"data-gd-decorations\", decorations.trim());         }     </script> </div>  ### Glass  The `glass` decoration makes the header translucent and applies a backdrop blur to give it a glass-like appearance.  ### Blend  The `blend` decoration gives the header a gradient between the primary and secondary accent colors.  ## Accent colors  You can also change the primary and secondary accent colors of the site. The options currently available are:  ### Primary  <div style=\"display: flex; gap: 10px; flex-wrap: wrap; margin-top: 1rem;\">     <button class=\"color-button\" data-gd-primary-color=\"red\" onclick=\"changeColor('red')\">red</button>     <button class=\"color-button\" data-gd-primary-color=\"fuchsia rose\" onclick=\"changeColor('fuchsia rose')\">fuchsia rose</button>     <button class=\"color-button\" data-gd-primary-color=\"marsala\" onclick=\"changeColor('marsala')\">marsala</button>     <button class=\"color-button\" data-gd-primary-color=\"honeysuckle\" onclick=\"changeColor('honeysuckle')\">honeysuckle</button>     <button class=\"color-button\" data-gd-primary-color=\"chili pepper\" onclick=\"changeColor('chili pepper')\">chili pepper</button>     <button class=\"color-button\" data-gd-primary-color=\"true red\" onclick=\"changeColor('true red')\">true red</button>     <button class=\"color-button\" data-gd-primary-color=\"viva magenta\" onclick=\"changeColor('viva magenta')\">viva magenta</button>     <button class=\"color-button\" data-gd-primary-color=\"mocha mousse\" onclick=\"changeColor('mocha mousse')\">mocha mousse</button>     <button class=\"color-button\" data-gd-primary-color=\"sand dollar\" onclick=\"changeColor('sand dollar')\">sand dollar</button>     <button class=\"color-button\" data-gd-primary-color=\"rose quartz\" onclick=\"changeColor('rose quartz')\">rose quartz</button>     <button class=\"color-button\" data-gd-primary-color=\"living coral\" onclick=\"changeColor('living coral')\">living coral</button>     <button class=\"color-button\" data-gd-primary-color=\"orange\" onclick=\"changeColor('orange')\">orange</button>     <button class=\"color-button\" data-gd-primary-color=\"tangerine tango\" onclick=\"changeColor('tangerine tango')\">tangerine tango</button>     <button class=\"color-button\" data-gd-primary-color=\"tigerlily\" onclick=\"changeColor('tigerlily')\">tigerlily</button>     <button class=\"color-button\" data-gd-primary-color=\"peach fuzz\" onclick=\"changeColor('peach fuzz')\">peach fuzz</button>     <button class=\"color-button\" data-gd-primary-color=\"mimosa\" onclick=\"changeColor('mimosa')\">mimosa</button>     <button class=\"color-button\" data-gd-primary-color=\"yellow\" onclick=\"changeColor('yellow')\">yellow</button>     <button class=\"color-button\" data-gd-primary-color=\"illuminating\" onclick=\"changeColor('illuminating')\">illuminating</button>     <button class=\"color-button\" data-gd-primary-color=\"greenery\" onclick=\"changeColor('greenery')\">greenery</button>     <button class=\"color-button\" data-gd-primary-color=\"green\" onclick=\"changeColor('green')\">green</button>     <button class=\"color-button\" data-gd-primary-color=\"emerald\" onclick=\"changeColor('emerald')\">emerald</button>     <button class=\"color-button\" data-gd-primary-color=\"turquoise\" onclick=\"changeColor('turquoise')\">turquoise</button>     <button class=\"color-button\" data-gd-primary-color=\"blue turquoise\" onclick=\"changeColor('blue turquoise')\">blue turquoise</button>     <button class=\"color-button\" data-gd-primary-color=\"aqua sky\" onclick=\"changeColor('aqua sky')\">aqua sky</button>     <button class=\"color-button\" data-gd-primary-color=\"blue\" onclick=\"changeColor('blue')\">blue</button>     <button class=\"color-button\" data-gd-primary-color=\"serenity\" onclick=\"changeColor('serenity')\">serenity</button>     <button class=\"color-button\" data-gd-primary-color=\"cerulean\" onclick=\"changeColor('cerulean')\">cerulean</button>     <button class=\"color-button\" data-gd-primary-color=\"classic blue\" onclick=\"changeColor('classic blue')\">classic blue</button>     <button class=\"color-button\" data-gd-primary-color=\"blue iris\" onclick=\"changeColor('blue iris')\">blue iris</button>     <button class=\"color-button\" data-gd-primary-color=\"very peri\" onclick=\"changeColor('very peri')\">very peri</button>     <button class=\"color-button\" data-gd-primary-color=\"indigo\" onclick=\"changeColor('indigo')\">indigo</button>     <button class=\"color-button\" data-gd-primary-color=\"ultra violet\" onclick=\"changeColor('ultra violet')\">ultra violet</button>     <button class=\"color-button\" data-gd-primary-color=\"violet\" onclick=\"changeColor('violet')\">violet</button>     <button class=\"color-button\" data-gd-primary-color=\"radiant orchid\" onclick=\"changeColor('radiant orchid')\">radiant orchid</button>     <button class=\"color-button\" data-gd-primary-color=\"ultimate gray\" onclick=\"changeColor('ultimate gray')\">ultimate gray</button>     <button class=\"color-button\" data-gd-primary-color=\"jet black\" onclick=\"changeColor('jet black')\">jet black</button>     <button class=\"color-button\" data-gd-primary-color=\"midnight\" onclick=\"changeColor('midnight')\">midnight</button>     <button class=\"color-button\" data-gd-primary-color=\"black\" onclick=\"changeColor('black')\">black</button>     <button class=\"color-button\" data-gd-primary-color=\"white\" onclick=\"changeColor('white')\">white</button>     <style>         .color-button {             border: none;             color: var(--gd-header-fg-color);             font-weight: bold;             padding: 0.25rem 1rem;             background: var(--gd-primary-color);             border-radius: 999px;             font-size: 0.875rem;         }     </style>     <script>         function changeColor(color) {             config['primary-color'] = color;             updateConfig();             document.querySelector(\"body\").setAttribute(\"data-gd-primary-color\", color);         }     </script> </div>  ### Secondary  <div style=\"display: flex; gap: 10px; flex-wrap: wrap; margin-top: 1rem;\">     <button class=\"secondary-color-button\" data-gd-secondary-color=\"red\" onclick=\"changeSecondaryColor('red')\">red</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"fuchsia rose\" onclick=\"changeSecondaryColor('fuchsia rose')\">fuchsia rose</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"marsala\" onclick=\"changeSecondaryColor('marsala')\">marsala</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"honeysuckle\" onclick=\"changeSecondaryColor('honeysuckle')\">honeysuckle</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"chili pepper\" onclick=\"changeSecondaryColor('chili pepper')\">chili pepper</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"true red\" onclick=\"changeSecondaryColor('true red')\">true red</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"viva magenta\" onclick=\"changeSecondaryColor('viva magenta')\">viva magenta</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"mocha mousse\" onclick=\"changeSecondaryColor('mocha mousse')\">mocha mousse</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"sand dollar\" onclick=\"changeSecondaryColor('sand dollar')\">sand dollar</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"rose quartz\" onclick=\"changeSecondaryColor('rose quartz')\">rose quartz</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"living coral\" onclick=\"changeSecondaryColor('living coral')\">living coral</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"orange\" onclick=\"changeSecondaryColor('orange')\">orange</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"tangerine tango\" onclick=\"changeSecondaryColor('tangerine tango')\">tangerine tango</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"tigerlily\" onclick=\"changeSecondaryColor('tigerlily')\">tigerlily</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"peach fuzz\" onclick=\"changeSecondaryColor('peach fuzz')\">peach fuzz</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"mimosa\" onclick=\"changeSecondaryColor('mimosa')\">mimosa</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"yellow\" onclick=\"changeSecondaryColor('yellow')\">yellow</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"illuminating\" onclick=\"changeSecondaryColor('illuminating')\">illuminating</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"greenery\" onclick=\"changeSecondaryColor('greenery')\">greenery</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"green\" onclick=\"changeSecondaryColor('green')\">green</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"emerald\" onclick=\"changeSecondaryColor('emerald')\">emerald</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"turquoise\" onclick=\"changeSecondaryColor('turquoise')\">turquoise</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"blue turquoise\" onclick=\"changeSecondaryColor('blue turquoise')\">blue turquoise</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"aqua sky\" onclick=\"changeSecondaryColor('aqua sky')\">aqua sky</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"blue\" onclick=\"changeSecondaryColor('blue')\">blue</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"serenity\" onclick=\"changeSecondaryColor('serenity')\">serenity</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"cerulean\" onclick=\"changeSecondaryColor('cerulean')\">cerulean</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"classic blue\" onclick=\"changeSecondaryColor('classic blue')\">classic blue</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"blue iris\" onclick=\"changeSecondaryColor('blue iris')\">blue iris</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"very peri\" onclick=\"changeSecondaryColor('very peri')\">very peri</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"indigo\" onclick=\"changeSecondaryColor('indigo')\">indigo</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"ultra violet\" onclick=\"changeSecondaryColor('ultra violet')\">ultra violet</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"violet\" onclick=\"changeSecondaryColor('violet')\">violet</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"radiant orchid\" onclick=\"changeSecondaryColor('radiant orchid')\">radiant orchid</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"ultimate gray\" onclick=\"changeSecondaryColor('ultimate gray')\">ultimate gray</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"black\" onclick=\"changeSecondaryColor('black')\">black</button>     <button class=\"secondary-color-button\" data-gd-secondary-color=\"white\" onclick=\"changeSecondaryColor('white')\">white</button>     <button class=\"color-button\" data-gd-primary-color onclick=\"changeSecondaryColor('primary')\">primary</button>     <style>         .secondary-color-button {             border: none;             color: var(--gd-header-fg-color);             font-weight: bold;             padding: 0.25rem 1rem;             background: var(--gd-secondary-color);             border-radius: 999px;             font-size: 0.875rem;         }     </style>     <script>         function changeSecondaryColor(color) {             config['secondary-color'] = color;             updateConfig();             document             .querySelector(\"body\")             .setAttribute(\"data-gd-secondary-color\", color);         }     </script> </div>  ## Config  For convenience you can copy and paste the output below into the theme section of your config file.  <pre id=\"config-output\"></pre>  <script>updateConfig()</script> "},{"name":"Navigation","path":"/setup/navigation.html","text":"# Navigation  ## Breadcrumbs  You can enable breadcrumbs by setting the `navigation.breadcrumbs` option in `docodile.config` to `true`.  ```ini [navigation] breadcrumbs=true ```"},{"name":"Reference","path":"/reference/index.html","text":"# Reference  Now that you're set up you need to start writing some docs! This section will walk you through creating content on a `Docodile` site. If you're already familiar with Markdown you can skip [that section](./markdown.md), but make sure to check out the [Markdown Extensions](./markdown-extensions/index.md) section to learn about the advanced Markdown syntax that `Docodile` supports.   The [organisation](./index.md) section will give tips on how to organise your documentation."},{"name":"Markdown","path":"/reference/markdown.html","text":"# Markdown  `Docodile` supports all basic Markdown syntax.  ## Headings  ```markdown # Heading level 1  ## Heading level 2  ### Heading level 3  #### Heading level 4  ##### Heading level 5  ###### Heading level 6 ```  ---  ## Paragraphs  This is a paragraph.  This is a separate paragraph.  ---  ## Line breaks  This is a line break within a paragraph.  ---  ## Emphasis  You can use _italics_ and **bold** to emphasise parts of text. You can combine **_bold and italics_**.  ```markdown You can use _italics_ and **bold** to emphasise parts of text. You can combine **_bold and italics_**. ```  ---  ## Blockquotes  > This is a block quote  ```markdown > This is a block quote. ```  ---  ## Lists  ### Ordered Lists  1. First item 2. Second item 3. Third item 4. Fourth item  ```markdown 1. First item 2. Second item 3. Third item 4. Fourth item ```  1. First item 2. Second item 3. Third item    1. Indented item    2. Indented item 4. Fourth item  ```markdown 1. First item 2. Second item 3. Third item    1. Indented item    2. Indented item 4. Fourth item ```  ### Unordered lists  - First item - Second item - Third item - Fourth item  ```markdown - First item - Second item - Third item - Fourth item ```  - First item - Second item - Third item   - Indented item   - Indented item - Fourth item  ```markdown - First item - Second item - Third item   - Indented item   - Indented item - Fourth item ```  ---  ## Code  ### Inline code  You can inline `code` snippets.  ```markdown You can inline `code` snippets. ```  ### Code blocks  ```c #include <stdio.h>  int main(int argc, char **argv) {     printf(\"Hello, World!\\n\"); } ```  ---  ## Horizontal rules  ```markdown --- ```  ---  ## Links  My favourite search engine is [Duck Duck Go](https://duckduckgo.com \"yeah\"). "},{"name":"Markdown Extensions","path":"/reference/markdown-extensions/index.html","text":"# Markdown extensions  Beyond the basics, `Docodile` supports more advanced Markdown syntax. Many you will have seen in other Markdown processors, like [Admonitions](./admonitions.md) and [Tables](./tables.md) which are supported by most major static site generators.   Some extensions in `Docodile` are not necessarily available in other Markdown processors and therefore might not work in both.  "},{"name":"Admonitions","path":"/reference/markdown-extensions/admonitions.html","text":"# Admonitions  Admonitions are useful when you want to draw attention to a short snippet of content, or if you want to indicate that it's complimentary, but not necessarily essential, to the main content. For example you might use a warning admonition to alert the reader of something important. In other instances you might use a note admonition to give tangential context to a piece of content.  ## Supported types  ### Note  !!! note \"Note\"      Notes can add context or peripheral information without breaking the flow of the main content.  ### Success  !!! success \"Success\"      A success admonition can be used to indicate that something good has happened.  ### Question  !!! question \"Question\"      Question admonitions can be used to engage the reader by posing a question to them. It can also be used to convey an unknown.  ### Warning  !!! warning \"Warning\"      Warnings should be used when the reader needs to pay careful attention to the content.  ### Critical  !!! critical \"Critical\"      A critical admonition is the most severe tone and should be reserved for very important messages.  ## Custom types  Adding custom admonitions is super easy. Pick a name for the type and start using it. `Docodile` will automatically assign whatever you call it as a class on the admonition. You just need to edit `main.css` in your styles folder to change the color and the icon:  ```css .admonition {   &.custom {     --color: var(--gd-color-very-peri);     --icon: \"\\F328\";   } } ```  To find the code point for the icon just go to [Bootstrap Icons](https://icons.getbootstrap.com/).  !!! custom \"Custom\"      This is a custom admonition. "},{"name":"Collapsible Headings","path":"/reference/markdown-extensions/collapsible-headings.html","text":"# Collapsible headings  ## Example { open }      A simple addition to the basic Markdown syntax is the ability to indent content below a heading to make it a collapsible area. The heading will become an interactive collapse toggle and all indented content will be hidden away when the reader clicks it.      !!! note \"Note\"          You can use any Markdown inside these collapsed sections, including other Markdown extensions such as admonitions.      ### Nesting example          You can nest collapsing headings, but it is not recommended as it can become quite hard for the reader to understand the hierarchy of content. Try to stick to one level of nesting. If within a collapsing area you want to de-emphasise the importance of something, or indicate that it is an aside, use admonitions instead.  ## Default behaviour  By default collapsible headings will be closed. But you can override this behaviour using inline attributes.  ```markdown # Collapsing heading { open } ```  ## Mutually exclusive collapsing  Sometimes you might want to have a set of collapsing headings where only one can be open at a time. If you give multiple collapsing headings the same name attribute the browser will automatically close the others when one is opened.  ### Graduation Requirements { name=\"requirements\" }      Requires 40 credits, including a passing grade in health, geography, history, economics, and wood shop.  ### System Requirements { name=\"requirements\" }      Requires a computer running an operating system. The computer must have some memory and ideally some kind of long-term storage. An input device as well as some form of output device is recommended.  ### Job Requirements { name=\"requirements\" }      Requires knowledge of HTML, CSS, JavaScript, accessibility, web performance, privacy, security, and internationalization, as well as a dislike of broccoli.  ```markdown ### Graduation Requirements { name=\"requirements\" }      Requires 40 credits, including a passing grade in health, geography, history, economics, and wood shop.  ### System Requirements { name=\"requirements\" }      Requires a computer running an operating system. The computer must have some memory and ideally some kind of long-term storage. An input device as well as some form of output device is recommended.  ### Job Requirements { name=\"requirements\" }      Requires knowledge of HTML, CSS, JavaScript, accessibility, web performance, privacy, security, and internationalization, as well as a dislike of broccoli. ``` "},{"name":"Tables","path":"/reference/markdown-extensions/tables.html","text":"# Tables  | Syntax    | Description | | --------- | ----------- | | Header    | Title       | | Paragraph | Text        |  ```markdown | Syntax    | Description | | --------- | ----------- | | Header    | Title       | | Paragraph | Text        | ``` "},{"name":"Organisation","path":"/reference/organisation.html","text":"# Organisation  The structure of your `docs` folder dictates the structure of your site. Each top-level directory will appear on the header as a main section of your site. These sections should split your content at a very coarse-grain level. Further levels of nesting will appear in the sidebar navigation as drop downs.   ## Ordering  By default `Docodile` will order navigation alphabetically but with `index.md` files sorted to the top. Sometimes alphabetical isn't the appropriate sorting method as your content might have a strict order relationship. In these cases you can add a `_nav.md` file to the directory you want to sort. These hidden nav files just use a regular Markdown list to control the ordering of your    ```markdown - getting-started - setup - reference ```"},{"name":"Docs","path":"/index.html","text":""}]